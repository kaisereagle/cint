/***************************************************************************
* guibuild.wc
*   WildC++ GUI builder 
*   Copyright(c) 1996-1997   Masaharu Goto (MXJ02154@niftyserve.or.jp)
*
*  This program is under construction.
****************************************************************************/

/////////////////////////////////////////////////////////////////////////////
// Classes
/////////////////////////////////////////////////////////////////////////////
// Attribute list class saves widget attribute option and value
class G__Attribute {
 public:
  G__Attribute(char *optin="",char *valin="") {
    SetOption(optin);
    SetValue(valin);
    next = (G__Attribute*)NULL;
  }
  ~G__Attribute() {
    if(next) delete next;
  }
  void SetOption(char *optin) {
    strcpy(option,optin);
  }
  void SetValue(char *valin) {
    strcpy(value,valin);
  }
  void Add(char *optin,char *valin) {
    G__Attribute *patt = &att;
    while(patt->next) patt=patt->next;
    patt->SetOption(optin);
    patt->SetValue(valin);
    patt->next = new G__Attribute;
  }
  char *GetValue() { return value; }
  char *GetOption() { return option; }
 private:
  char option[50];
  char value[80];
  G__Attribute *next;
};

/////////////////////////////////////////////////////////////////////////////
// Widget class has common attributes of GUI widget
class G__Widget {
  // Constructor, set default attributes
  G__Widget() {
    common.Add("-bg","gray");
    common.Add("-relief","raised");
    common.Add("-borderwidth","2");
    strcpy(bind,"");
  }
 protected:
  // name of widget
  char widgetname[50];
  char parentpath[100];
  char nameindex[10];
  char name[20];
  // color attributes
  G__Attribute common;
  G__Attribute each;
  // bind
  char bind[100];
  // pack
};

/////////////////////////////////////////////////////////////////////////////
class G__Button : public G__Widget {
 public:
  G__Button() {
    strcpy(widgetname,"button");
    strcpy(nameindex,"b");
    strcpy(parent,"");
    strcpy(name,"%s%d",nameindex,num);
    each.Add("-text","Button");
    ++num;
  }
 private:
  static int num=0;
};

/////////////////////////////////////////////////////////////////////////////

main() {
  #pragma tcl interp
    frame .build
    button .build.b1 -text "quit"
    bind .build.b1 <Button> exit
    pack .build.b1
    pack .build

    toplevel .gui
    button .gui.b1 -text "This program is not ready yet"
    pack .gui.b1
  #pragma endtcl
  WildCard_MainLoop();
}