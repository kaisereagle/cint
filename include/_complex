#ifndef G__COMPLEX_DLL
//#pragma include_noerr <complex.dll>
#endif

#ifndef G__COMPLEX_H
#define G__COMPLEX_H

#ifdef __MAKECINT__
#include <prec_stl/complex>
//#include <_complex.h>
#else
#include <_complex.h>
#endif

#if defined(__CINT__) && !defined(__MAKECINT__)
#if 1
#include <typeinfo.h>
template<class scalar>
int G__ateval(const complex<scalar>& x) {
  cout << "(" << typeid(x).name() << ")" << x << endl;
  return(1);
}
#else
template<class scalar>
int G__ateval(const complex<scalar>& x) {
  cout << "(complex)" << x << endl;
  return(1);
}
#endif
#endif

#endif
